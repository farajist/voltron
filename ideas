- It's a framework, but needs more wrapping :
	- GameObject's draw function takes a renderer !
	- TextureManager handles textures through id  
	- 

=> Hide the renderer details from the user of the framework
=> TextureManager gotta handle texture objects (more natural approach)
=> Wrap window related things in a single class
=> Improve the game object (more reading ;) )
=> Ummm well, since it'a a framework ! Why not impose a folder structure ?
	and do auto loading stuff automatically ?
=> Object for other componenents as well
=> BoundingBox instead of x, y ?? From GoF

=> Why the actual fuck we have a LoaderParams class if we're duplicatin them inside SDLGameObject ???
=> Hummm, InputHandler is compatible  only with XBox360's joystick, generalize using json too xD ?

Fifth idea needs some discussion ! But results are the best argument ;)


game state : rather a stacka adapter ?
		unique_ptrs babe
fcking textureBuilder
fcking animatorsBuilders xD


=> TextureManager's load has a shitty param called id, while it can
be dumnbassedly deduced from name !!!!

=> for God sake, shit is so common btwn states, tel3 lfoo9 asat 
	... l'abstra ma3endch dilmok

Ummm collision detection ... many parties maybe interested :thinks: ... 
many parties may wanna observe ? Obvser.. ver .. DP .. reacti .. xD ?


ummm collison detectives as a strategy pattern 